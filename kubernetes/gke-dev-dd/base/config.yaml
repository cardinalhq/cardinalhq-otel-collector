apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: cardinalhq
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: collector-gke-dev-dd
  name: cardinal-collector-config
data:
  config.yaml: |-
    receivers:
      chqdatadog:
        endpoint: 0.0.0.0:8126
    processors:
      cumulativetodelta:
      batch:
        timeout: 10s
        send_batch_size: 10
        send_batch_max_size: 50
      memory_limiter:
        limit_mib: 1000
        check_interval: 1s
      chqdecorator:
        sampler_config_file: https://www.flame.org/~explorer/sampler-config.yaml
        api_key: ${env:DD_API_KEY}
        traces:
          graph_url: http://microbatch-flows.default.svc.cluster.local:7101/api/v1/flowGraph
          uninteresting_rate: 1000
          has_error_rate: 4

      # This processor should be added to the list of processors that
      # are in the pipeline destined to the upstream provider, such as
      # Datadog.  It should NOT be used to filter output to S3 for
      # later processing by CardinalHQ.
      filter/export:
        error_mode: ignore
        logs:
          log_record:
            - 'attributes["_cardinalhq.filtered"] == true'
        metrics:
          datapoint:
            - 'attributes["_cardinalhq.filtered"] == true'
        traces:
          span:
            - 'attributes["_cardinalhq.filtered"] == true'

      # Items marked with _cardinalhq.aggregated_output are not sent to
      # CardinalHQ, as the metrics they represent would already be
      # included in the detailed metrics.
      filter/cardinalhq:
        error_mode: ignore
        logs:
          log_record:
            - 'attributes["_cardinalhq.aggregated_output"] == true'
        metrics:
          datapoint:
            - 'attributes["_cardinalhq.aggregated_output"] == true'
        traces:
          span:
            - 'attributes["_cardinalhq.aggregated_output"] == true'

      # This processor should be added to the list of processors that
      # are in the pipeline destined to the upstream provider, such as
      # Datadog.  It should NOT be used to filter output sent to
      # CardinalHQ.
      attributes/export:
        actions:
          - action: delete
            pattern: '^_cardinalhq.*'
    exporters:
      nop:
      datadog:
        api:
          key: ${env:DD_API_KEY}
          site: us3.datadoghq.com
      datadog/cardinalhq:
        api:
          key: ${env:DD_API_KEY}
          site: intake.cardinalhq.io
        logs:
          endpoint: https://intake.cardinalhq.io
        metrics:
          endpoint: https://intake.cardinalhq.io
        traces:
          endpoint: https://intake.cardinalhq.io

    connectors:
      forward/filtered:
      forward/mergedmetrics:

    service:
      pipelines:
        logs/chq:
          receivers: [chqdatadog]
          processors: [memory_limiter, chqdecorator, batch]
          exporters: [datadog/cardinalhq, forward/filtered]
        logs/filtered:
          receivers: [forward/filtered]
          processors: [filter/export, attributes/export]
          exporters: [datadog]
        metrics:
          receivers: [chqdatadog]
          processors: [memory_limiter, cumulativetodelta, chqdecorator, batch]
          exporters: [forward/mergedmetrics, forward/filtered]
        metrics/chq:
          receivers: [forward/mergedmetrics]
          processors: [filter/cardinalhq]
          exporters: [datadog/cardinalhq]
        metrics/filtered:
          receivers: [forward/filtered]
          processors: [filter/export, attributes/export]
          exporters: [datadog]
        traces:
          receivers: [chqdatadog]
          exporters: [nop]

      extensions:
        - zpages
        - health_check

      telemetry:
        metrics:
          readers:
            - periodic:
                interval: 10000
                exporter:
                  otlp:
                    protocol: grpc/protobuf
                    endpoint: http://cardinal-collector.collector.svc.cluster.local:4317

    extensions:
      zpages:
        endpoint: "0.0.0.0:55679"
      health_check:
        endpoint: "0.0.0.0:13133"
        path: "/healthz"
