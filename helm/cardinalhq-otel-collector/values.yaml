vendors:
  cardinalhq:
    enabled: true
    exporter: otlp
    logs: true
    metrics: true
    traces: true
    keepTags: true
    config:
      sending_queue:
        storage: file_storage/scratch
        queue_size: 100000
      endpoint: https://chq-collector-grpc.svc.aws.dev.cardinalhq.net:443
      auth:
        authenticator: chqauth/cardinalhq
  datadog:
    enabled: true
    exporter: chqdatadog
    logs: true
    metrics: true
    traces: true
    config:
      sending_queue:
        storage: file_storage/scratch
        queue_size: 100000
      api_key: ${env:DATADOG_API_KEY}
      metrics:
        endpoint: https://intake.cardinalhq.io
        compression: gzip
      logs:
        endpoint: https://intake.cardinalhq.io
        compression: gzip
      traces:
        endpoint: https://intake.cardinalhq.io
        compression: gzip

collector:
  aggregation:
    interval: 2s
  ports:
    internal:
      otlpGRPCPort: 14317
  endpoints:
    cardinalhq:
      otlpGRPC: https://chq-collector-grpc.svc.aws.dev.cardinalhq.net:443
      stats: https://stats-receiver.svc.aws.dev.cardinalhq.net
      statsInterval: 5m
      samplerConfig: https://api.svc.aws.dev.cardinalhq.net/api/v1/samplerConfig
    zpages:
      port: 55679
    healthz:
      port: 13133
      path: /healthz
  l1:
    image:
      repository: public.ecr.aws/b1d7g2f3/cardinalhq-otel-collector
      tag: latest
    replicas: 2
    env:
      gomemlimit: 1500MiB
    resources:
      limits:
        cpu: 2000m
        memory: 2000Mi
      requests:
        cpu: 2000m
        memory: 2000Mi
    pvc:
      size: 8Gi
    defaultReceivers:
      - name: otlp/l1
        enabled: true
        config:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
      - name: chqdatadog/l1
        enabled: true
        config:
          endpoint: 0.0.0.0:8126
    additionalReceivers: []
    exporters:
      logs:
        - name: otlp/cardinalhq
          enabled: true
          vendor: cardinalhq
        - name: chqdatadog/datadog
          enabled: true
          vendor: datadog
  l2:
    image:
      repository: public.ecr.aws/b1d7g2f3/cardinalhq-otel-collector
      tag: latest
    replicas: 2
    env:
      gomemlimit: 750MiB
    resources:
      limits:
        cpu: 1000m
        memory: 1000Mi
      requests:
        cpu: 1000m
        memory: 1000Mi
    pvc:
      size: 8Gi
loadbalancer:
  serviceName: collector-l2

# Secrets and references.
secrets:
  # If "create" is true, the contents of the "apiKey" field will be used to
  # create a secret with an internally generated name.
  create: true
  cardinalhq:
    # if "create" is false, use this reference.  It is not used if "create" is true.
    name:
    # if "create" is true, use this value to create the secret.
    apiKey:
    # the field to pull the secret from
    field: api-key
  datadog:
    # if "create" is false, use this reference.  It is not used if "create" is true.
    name:
    # if "create" is true, use this value to create the secret.
    apiKey: ""
    # the field to pull the secret from
    field: api-key
  aws:
    name:
    accessKey: ""
    accessKeyField: AWS_ACCESS_KEY_ID
    secretKey: ""
    secretKeyField: AWS_SECRET_ACCESS_KEY

chqs3:
  enabled: true
  config:
    s3uploader:
      region: ""
      s3_bucket: ""
      s3_prefix: ""
      s3_partition: minute
    buffering:
      type: disk
      directory: /app/scratch
    timeboxes:
      logs:
        interval: 10s
        open_interval_count: 1
        grace_period: 1s
      metrics:
        interval: 10s
        open_interval_count: 4
        grace_period: 2s
      traces:
        interval: 10s
        open_interval_count: 1
        grace_period: 1s

# Annotations for various resources.
annotations:
  # common annotations are set on all resources.
  common: {}
  # specific annotations are set on specific resources.
  serviceAccount: {}
  deployment: {}
  pod: {}
  service: {}
  configMap: {}
  secret: {}
  role: {}
  roleBinding: {}
  pvc: {}

selfTelemetry:
  telemetry:
    metrics:
      readers:
        - periodic:
            interval: 10000
            exporter:
              otlp:
                protocol: grpc/protobuf
                endpoint: https://customerstats-collector-grpc.svc.aws.dev.cardinalhq.net:443
                headers:
                  x-cardinalhq-api-key: ${env:CARDINALHQ_API_KEY}
