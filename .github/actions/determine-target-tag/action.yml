name: Determine target tag
description: either uses a manually specified tag or determines the most recent versioned tag
inputs:
  target-tag:
    description: The tag to deploy, or latest versioned tag if not specified
    required: false
  fallback-tag:
    description: Tag to use if target-tag not specified
    required: false
outputs:
  tag:
    value: ${{ steps.determine-tag.outputs.tag }}
  desc:
    value: ${{ steps.determine-tag.outputs.desc }}
  hash:
    value: ${{ steps.determine-tag.outputs.hash }}
  today-string:
    value: ${{ steps.determine-tag.outputs.today-string }}
runs:
  using: composite
  steps:

    - name: Determine tag
      id: determine-tag
      shell: bash
      run: |
        if [ ! -z '${{ inputs.target-tag }}' ]; then
          echo "Target tag: ${{ inputs.target-tag }}"
          target_tag=$(git tag -l '${{ inputs.target-tag }}')
         
        elif [ ! -z '${{ inputs.fallback-tag }}' -a '${{ inputs.fallback-tag }}' != 'refs/heads/main' ]; then
          echo "Fallback tag: ${{ inputs.fallback-tag }}"
          TAG_REF='${{ inputs.fallback-tag }}'
          TAG_BARE=${TAG_REF#refs/tags/}
          echo "Bare tag: $TAG_BARE"
          target_tag=$(git tag -l $TAG_BARE)
        else
          #increment patch if tag is blank
          git fetch --tags
          latest_version_tag=$(git describe --tags --match "v*.*.*" --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest version tag: $latest_version_tag"
          VERSION=${latest_version_tag#v}
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          # Increment the patch version
          PATCH_VERSION=${VERSION_PARTS[2]}
          PATCH_VERSION=$((PATCH_VERSION + 1))
          # Form the new tag
          NEW_TAG="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
          echo "New tag: $NEW_TAG"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          target_tag=$NEW_TAG
        fi
          tag_desc=$(git describe --tags --match "${target_tag}" 2>/dev/null)
          tag_hash=$(git rev-list -n 1 $tag_desc)
          echo "tag=$target_tag" >> $GITHUB_OUTPUT
          echo "desc=$tag_desc" >> $GITHUB_OUTPUT
          echo "hash=$tag_hash" >> $GITHUB_OUTPUT
          echo "today-string=$(date +%Y%m%d)" >> $GITHUB_OUTPUT
