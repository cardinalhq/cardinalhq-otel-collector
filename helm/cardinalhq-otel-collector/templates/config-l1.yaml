apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "customerside.labels" . | nindent 4 }}
    app.kubernetes.io/component: collector-l1
  {{- include "customerside.configMap.annotations" . | nindent 2 }}
  name: {{ include "customerside.fullname" . }}-collector-config-l1
  {{- include "customerside.namespace" . | nindent 2 }}
data:
  config.yaml: |-
    receivers:
      # Default receivers for the collector.
      {{- range $index, $config := .Values.collector.l1.defaultReceivers }}
      {{- if $config.enabled }}
      {{ $config.name }}:
      {{- toYaml $config.config | nindent 8 }}:
      {{- end }}
      {{- end }}
      # customer-added receivers
      {{- range $index, $config := .Values.collector.l1.additionalReceivers }}
      {{- if $config.enabled }}
      {{ $config.name }}:
      {{- toYaml $config.config | nindent 8 }}:
      {{- end }}
      {{- end }}
    exporters:
      nop:
      loadbalancing/metrics:
        routing_key: "metric"
        protocol:
          otlp:
            tls:
              insecure: true
            sending_queue:
              queue_size: 2000
            retry_on_failure:
              enabled: true
              max_elapsed_time: 1m
              initial_interval: 1s
              max_interval: 10s
        resolver:
          k8s:
            service: "{{ include "customerside.fullname" . }}-collector-l2.${env:POD_NAMESPACE}"
            ports:
              - {{ .Values.collector.ports.internal.otlpGRPCPort }}
      loadbalancing/traces:
        routing_key: "traceID"
        protocol:
          otlp:
            tls:
              insecure: true
            sending_queue:
              queue_size: 2000
            retry_on_failure:
              enabled: true
              max_elapsed_time: 1m
              initial_interval: 1s
              max_interval: 10s
        resolver:
          k8s:
            service: "{{ include "customerside.name" . }}-collector-l2.${env:POD_NAMESPACE}"
            ports:
              - {{ .Values.collector.ports.internal.otlpGRPCPort }}

      {{ range $name, $flags := .Values.vendors }}
      {{ if and $flags.enabled $flags.logs -}}
      {{ $flags.exporter }}/{{ $name }}:
        {{ toYaml $flags.config | nindent 8 }}
      {{ end -}}
      {{ end }}

    processors:
      # Limit collector process memory usage.  This should be the first processor
      # in the processor list.
      memory_limiter/l1:
        limit_mib: 1500
        spike_limit_mib: 100
        check_interval: 5s

      batch/intakestats:
        timeout: 1s
        send_batch_size: 100
        send_batch_max_size: 1000

      {{ range $name, $flags := .Values.vendors -}}
      {{ if and $flags.enabled $flags.logs -}}
      batch/{{ $name }}:
        timeout: 1s
        send_batch_size: 100
        send_batch_max_size: 1000
      {{ end -}}
      {{ end -}}

      chqdecorator/l1:
        traces:
          uninteresting_rate: 1000
          has_error_rate: 4
      chqenforcer/intakestats:
        configuration_extension: chqconfig/cardinalhq
        drop_decoration_attributes: false
        statistics:
          endpoint: {{ .Values.collector.endpoints.cardinalhq.stats }}
          auth:
            authenticator: chqauth/cardinalhq
          phase: presample
          vendor: intakestats

      {{ range $name, $flags := .Values.vendors -}}
      {{ if and $flags.enabled $flags.logs -}}
      chqenforcer/{{ $name }}:
        configuration_extension: chqconfig/cardinalhq
        {{ if $flags.keepTags }}
        drop_decoration_attributes: false
        {{ end }}
        statistics:
          endpoint: {{ $.Values.collector.endpoints.cardinalhq.stats }}
          auth:
            authenticator: chqauth/cardinalhq
          phase: postsample
          vendor: {{ $name }}
      {{ end -}}
      {{ end }}

    connectors:
      forward/intakestats:
      {{ range $name, $flags := .Values.vendors -}}
      {{ if and $flags.enabled $flags.logs -}}
      forward/{{ $name }}:
      {{ end -}}
      {{ end }}
        
    service:
      pipelines:
        # log handling.  No need to partition here.
        logs/l1:
          receivers:
            - otlp/l1
            - chqdatadog/l1
            {{- range $key, $config := .Values.collector.l1.additionalReceivers }}
            {{- if and $config.enabled $config.logs }}
            - {{ $config.name }}
            {{- end }}
            {{- end }}
          processors:
            - memory_limiter/l1
            - chqdecorator/l1
          exporters:
            - forward/intakestats:
            {{ range $name, $flags := .Values.vendors -}}
            {{ if and $flags.enabled $flags.logs -}}
            - forward/{{ $name }}:
            {{ end -}}
            {{ end }}
        logs/intakestats:
          receivers:
            - forward/intakestats
          processors:
            - chqenforcer/cardinalhq
          exporters:
            - nop
        {{ range $name, $flags := .Values.vendors }}
        {{ if and $flags.enabled $flags.logs -}}
        logs/{{ $name }}:
          receivers:
            - forward/{{ $name }}
          processors:
            - chqenforcer/{{ $name }}
            - batch/{{ $name }}
          exporters:
            - {{ $flags.exporter}}/{{ $name }}
        {{ end -}}
        {{- end -}}

        metrics/l1:
          receivers:
            - otlp/l1
            - chqdatadog/l1
            {{- range $key, $config := .Values.collector.l1.additionalReceivers }}
            {{- if and $config.enabled $config.metrics }}
            - {{ $config.name }}
            {{- end }}
            {{- end }}
          processors:
            - memory_limiter/l1
          exporters:
            - loadbalancing/metrics

        traces/l1:
          receivers:
            - otlp/l1
            - chqdatadog/l1
            {{- range $key, $config := .Values.collector.l1.additionalReceivers }}
            {{- if and $config.enabled $config.traces }}
            - {{ $config.name }}
            {{- end }}
            {{- end }}
          processors:
            - memory_limiter/l1
          exporters:
            - loadbalancing/traces

      {{ toYaml .Values.selfTelemetry | nindent 6 }}

      extensions:
        - zpages
        - health_check
        - chqauth/cardinalhq
        - chqconfig/cardinalhq

    extensions:
      zpages:
        endpoint: "0.0.0.0:{{ .Values.collector.endpoints.zpages.port }}"
      health_check:
        endpoint: "0.0.0.0:{{ .Values.collector.endpoints.healthz.port }}"
        path: {{ .Values.collector.endpoints.healthz.path }}
      chqauth/cardinalhq:
        client_auth:
          api_key: ${env:CARDINALHQ_API_KEY}
      chqconfig/cardinalhq:
        source:
          endpoint: {{ .Values.collector.endpoints.cardinalhq.samplerConfig }}
          auth:
            authenticator: chqauth/cardinalhq
