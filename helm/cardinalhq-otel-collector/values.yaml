identity:
  # (required) The customer ID.  This is obtained from Cardinal's UI.
  customerId: ""
  # (required) The collector ID.  This is obtained from Cardinal's UI, and should be unique per helm install.
  collectorId: ""

s3:
  enabled: true
  # (required) The region of the S3 bucket.
  region: ""
  # (required) The name of the S3 bucket.
  bucket: ""
  # (required) Timeboxes for s3uploader.  These should not generally be changed.
  timeboxes:
    logs:
      interval: 10s
      open_interval_count: 1
      grace_period: 1s
    metrics:
      interval: 10s
      open_interval_count: 1
      grace_period: 1s
    traces:
      interval: 10s
      open_interval_count: 1
      grace_period: 1s

vendors:
  cardinalhq:
    enabled: false
    dryrun: false
    exporter: otlp
    logs: true
    metrics: true
    traces: true
    keepTags: true
    config:
      sending_queue:
        storage: file_storage/scratch
        queue_size: 2000
      endpoint: https://customer-intake-otelgrpc.us-east-2.aws.prod.cardinalhq.net:443
      auth:
        authenticator: chqauth/cardinalhq
  datadog:
    enabled: false
    dryrun: false
    exporter: chqdatadog
    logs: true
    metrics: true
    traces: true
    config:
      sending_queue:
        storage: file_storage/scratch
        queue_size: 2000
      api_key: ${env:DATADOG_API_KEY}
      metrics:
        endpoint: https://intake.us-east-2.aws.prod.cardinalhq.io
        compression: gzip
      logs:
        endpoint: https://intake.us-east-2.aws.prod.cardinalhq.io
        compression: gzip
      traces:
        endpoint: https://intake.us-east-2.aws.prod.cardinalhq.io
        compression: gzip

collector:
  aggregation:
    interval: 2s
  defaultReceivers:
    - name: otlp/lx
      enabled: true
      config:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    - name: chqdatadog/lx
      enabled: true
      config:
        endpoint: 0.0.0.0:8126
        tagcache_extension: chqtagcache/lx
  additionalReceivers: []
  exporters:
    logs:
      - name: otlp/cardinalhq
        enabled: true
        vendor: cardinalhq
      - name: chqdatadog/datadog
        enabled: true
        vendor: datadog
  memory_limiter:
    limit_mib: 875
    spike_limit_mib: 100
  endpoints:
    cardinalhq:
      otlpGRPC: https://customer-intake-otelgrpc.us-east-2.aws.prod.cardinalhq.net:443
      stats: https://stats-receiver.global.aws.prod.cardinalhq.net
      statsInterval: 5m
      samplerConfig: https://api.global.aws.prod.cardinalhq.net/api/v1/samplerConfig
      tagcache: https://api.us-east-2.aws.test.cardinalhq.net
    zpages:
      port: 55679
    healthz:
      port: 13133
      path: /healthz
  deployment:
    image:
      repository: public.ecr.aws/cardinalhq.io/cardinalhq-otel-collector
      tag: latest
    replicas: 2
    env:
      gomemlimit: 850MiB
    resources:
      limits:
        cpu: 2000m
        memory: 1000Mi
      requests:
        cpu: 2000m
        memory: 1000Mi
    pvc:
      size: 8Gi

# Secrets and references.
secrets:
  # If "create" is true, the contents of the "apiKey" field will be used to
  # create a secret with an internally generated name.
  create: true
  cardinalhq:
    # if "create" is false, use this reference.  It is not used if "create" is true.
    name:
    # if "create" is true, use this value to create the secret.
    apiKey:
    # the field to pull the secret from
    field: api-key
  datadog:
    # if "create" is false, use this reference.  It is not used if "create" is true.
    name:
    # if "create" is true, use this value to create the secret.
    apiKey: ""
    # the field to pull the secret from
    field: api-key
  aws:
    name:
    accessKey: ""
    accessKeyField: AWS_ACCESS_KEY_ID
    secretKey: ""
    secretKeyField: AWS_SECRET_ACCESS_KEY

# Annotations for various resources.
annotations:
  # common annotations are set on all resources.
  common: {}
  # specific annotations are set on specific resources.
  serviceAccount: {}
  deployment: {}
  pod: {}
  service: {}
  configMap: {}
  secret: {}
  role: {}
  roleBinding: {}
  pvc: {}

selfTelemetry:
  enabled: false
  config:
    telemetry:
      metrics:
        readers:
          - periodic:
              interval: 10000
              exporter:
                otlp:
                  protocol: grpc/protobuf
                  endpoint: https://collector-telemetry-grpc.global.aws.prod.cardinalhq.net:443
                  headers:
                    x-cardinalhq-api-key: ${env:CARDINALHQ_API_KEY}
